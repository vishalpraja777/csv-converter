{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\D_Documents\\\\WebProjects\\\\CSVConvertor\\\\frontend\\\\src\\\\pages\\\\ConvertedFiles.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConvertedFiles = () => {\n  _s();\n  const [conversionData, setConversionData] = useState();\n  useEffect(() => {\n    console.log(localStorage.getItem('userid'));\n    fetch(`http://localhost:1337/api/getconversiondata/${localStorage.getItem('userid')}`).then(response => {\n      const reader = response.body.getReader();\n      console.log(reader);\n      reader.read().then(_ref => {\n        let {\n          done,\n          value\n        } = _ref;\n        if (done) {\n          console.log('end...');\n          return;\n        }\n        const decoder = new TextDecoder();\n        const strData = decoder.decode(value);\n        const jsonData = JSON.parse(strData);\n        console.log(jsonData);\n        setConversionData(jsonData);\n      });\n    });\n    console.log(conversionData);\n  }, []);\n  const handleDownload = async (e, filename, type) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:1337/api/downloadjson', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        filename: filename,\n        type: type\n      })\n    });\n    console.log('data');\n    const data = await response.json();\n    console.log(data);\n    console.log(filename);\n    console.log(type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Conversion Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mapping Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CSV File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Json File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), conversionData === null || conversionData === void 0 ? void 0 : conversionData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.conversionname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.mappingname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.csvfile.slice(14), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleDownload(e, item.csvfile, 'csv'),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.jsonfile.slice(14), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleDownload(e, item.jsonfile, 'json'),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ConvertedFiles, \"gGKcg3Q1QsRW2d3P/YGF3o8QU+w=\");\n_c = ConvertedFiles;\nexport default ConvertedFiles;\nvar _c;\n$RefreshReg$(_c, \"ConvertedFiles\");","map":{"version":3,"names":["useEffect","useState","Navbar","jsxDEV","_jsxDEV","ConvertedFiles","_s","conversionData","setConversionData","console","log","localStorage","getItem","fetch","then","response","reader","body","getReader","read","_ref","done","value","decoder","TextDecoder","strData","decode","jsonData","JSON","parse","handleDownload","e","filename","type","preventDefault","method","headers","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","conversionname","mappingname","csvfile","slice","onClick","jsonfile","_c","$RefreshReg$"],"sources":["D:/User/D_Documents/WebProjects/CSVConvertor/frontend/src/pages/ConvertedFiles.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst ConvertedFiles = () => {\r\n\r\n    const [conversionData, setConversionData] = useState()\r\n\r\n    useEffect(() => {\r\n        console.log(localStorage.getItem('userid'))\r\n        fetch(`http://localhost:1337/api/getconversiondata/${localStorage.getItem('userid')}`)\r\n            .then((response) => {\r\n                const reader = response.body.getReader();\r\n                console.log(reader)\r\n                reader.read().then(({ done, value }) => {\r\n                    if (done) {\r\n                        console.log('end...')\r\n                        return;\r\n                    }\r\n                    const decoder = new TextDecoder();\r\n                    const strData = decoder.decode(value)\r\n                    const jsonData = JSON.parse(strData)\r\n                    console.log(jsonData)\r\n                    setConversionData(jsonData)\r\n                });\r\n            })\r\n        console.log(conversionData)\r\n    }, [])\r\n\r\n    const handleDownload = async (e,filename, type) => {\r\n        e.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:1337/api/downloadjson',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                filename: filename,\r\n                type: type\r\n            })\r\n        })\r\n        console.log('data')\r\n\r\n\r\n        const data = await response.json();\r\n\r\n        console.log(data)\r\n\r\n        console.log(filename)\r\n        console.log(type)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div>\r\n                <table>\r\n                    <tr>\r\n                        <th>Conversion Name</th>\r\n                        <th>Mapping Name</th>\r\n                        <th>CSV File</th>\r\n                        <th>Json File</th>\r\n                    </tr>\r\n                    {\r\n                        conversionData?.map((item) =>\r\n                            <tr>\r\n                                <td>{item.conversionname}</td>\r\n                                <td>{item.mappingname}</td>\r\n                                <td>{item.csvfile.slice(14)} <button onClick={(e) => handleDownload(e,item.csvfile,'csv')}>Download</button></td>\r\n                                <td>{item.jsonfile.slice(14)} <button onClick={(e) => handleDownload(e,item.jsonfile,'json')}>Download</button></td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConvertedFiles;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}