{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\D_Documents\\\\WebProjects\\\\CSVConvertor\\\\frontend\\\\src\\\\components\\\\CreateMap.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport Navbar from \"./Navbar\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMap = () => {\n  _s();\n  const userToken = localStorage.getItem('token');\n  const userDecode = jwtDecode(userToken);\n  const navigate = useNavigate();\n\n  // CSV fields\n  const [csvFile, setCsvFile] = useState('');\n  const [csvFileName, setCsvFileName] = useState('');\n\n  // JSON Fields\n  const [jsonFile, setJsonFile] = useState('');\n  const [jsonFileName, setJsonFileName] = useState('');\n  const [csvHeaders, setCsvHeaders] = useState([]);\n  const [jsonHeaders, setJsonHeaders] = useState([]);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [mappings, setMappings] = useState(new Map());\n  const [mapName, setMapName] = useState('');\n\n  // CSV drag and drop\n  const handleDrageOverCsv = event => {\n    event.preventDefault();\n  };\n  const handleDropCsv = event => {\n    event.preventDefault();\n    setCsvFile(event.dataTransfer.files[0]);\n    setCsvFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n\n  // JSON drag and drop\n  const handleDrageOverJson = event => {\n    event.preventDefault();\n  };\n  const handleDropJson = event => {\n    event.preventDefault();\n    setJsonFile(event.dataTransfer.files[0]);\n    setJsonFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n  const handleNew = event => {\n    event.preventDefault();\n    setIsUploaded(false);\n    setCsvHeaders([]);\n    setJsonHeaders([]);\n    setCsvFile('');\n    setJsonFile('');\n    setCsvFileName('');\n    setJsonFileName('');\n    setMappings(new Map());\n  };\n  const handleDragOverMap = e => {\n    e.preventDefault();\n  };\n  const handleDropMap = (e, header) => {\n    e.preventDefault();\n    const droppedText = e.dataTransfer.getData(\"text\");\n    mappings.set(header, droppedText);\n    setMappings(new Map(mappings));\n    console.log(droppedText);\n    console.log(header);\n    console.log(mappings);\n  };\n  const handleOnDragStart = (e, textData) => {\n    e.dataTransfer.setData(\"text\", textData);\n  };\n  async function createMapping(e) {\n    e.preventDefault();\n    console.log(mappings);\n    if (!mapName) {\n      alert('Enter Map name');\n      return;\n    }\n    const mapping = {};\n    for (let [key, value] of mappings) {\n      mapping[key] = value;\n    }\n    console.log(mapping);\n    console.log(userDecode.email);\n    console.log(localStorage.getItem('userid'));\n    const mappingName = mapName.toLowerCase();\n    const response = await fetch('http://localhost:1337/api/createmapping', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: localStorage.getItem('userid'),\n        mapName: mappingName,\n        mappingData: mapping,\n        csvHeader: csvHeaders,\n        jsonHeader: jsonHeaders,\n        mappingType: 'json'\n      })\n    });\n    const data = await response.json();\n    if (data.status === 'ok') {\n      console.log(response.status);\n      alert('Mapping Created');\n      navigate('/homepage');\n    }\n    if (data.status === 'error') {\n      alert('Map name already exists \\nEnter a new map name');\n    }\n    // .then(response => {\n    //     console.log(response.status)\n    //         alert('Mapping Created')\n    //         navigate('/')\n    // })\n    // .catch(error => {\n    //     console.log(error)\n    //     alert('Enter a new map name')\n    // });\n  }\n\n  async function uplaodFile(event) {\n    event.preventDefault();\n    if (!csvFileName.endsWith(\".csv\")) {\n      alert(\"Please Upload a valid CSV file\");\n      window.location.reload();\n      return;\n    }\n    if (!jsonFileName.endsWith(\".json\")) {\n      alert(\"Please Upload a vald JSON file\");\n      window.location.reload();\n      return;\n    }\n    const csvFormData = new FormData();\n    const jsonFormData = new FormData();\n    if (csvFile && jsonFile) {\n      csvFormData.append('name', 'csv_file');\n      csvFormData.append('file', csvFile);\n      jsonFormData.append('name', 'json_file');\n      jsonFormData.append('file', jsonFile);\n      console.log(...csvFormData);\n      console.log(...jsonFormData);\n\n      // const formData = new FormData();\n      // formData.append('csv', csvFile);\n      // formData.append('json', jsonFile);\n\n      // try{\n      // const response = await fetch('http://localhost:1337/api/bothupload', {\n      //     method: 'POST',\n      //     body: formData,\n      // });\n\n      // const data = await response.json();\n\n      // console.log(data)\n\n      //     setCsvHeaders(data.csvHeaders);\n      //     setJsonHeaders(data.jsonHeaders);\n\n      // } catch(err) {\n      //     console.log(err)\n      // }\n      const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\n        method: 'POST',\n        body: csvFormData\n      });\n      const jsonResponse = await fetch('http://localhost:1337/api/uploadjson', {\n        method: 'POST',\n        body: jsonFormData\n      });\n      const csvData = await csvResponse.json();\n      const jsonData = await jsonResponse.json();\n      console.log(jsonData.jsonHeaders);\n      console.log(jsonData.jsonHeaders);\n      setCsvHeaders(csvData.csvHeaders);\n      setJsonHeaders(jsonData.jsonHeaders);\n      if (csvData.status === 'ok' && jsonData.status === 'ok') {\n        alert('File Uploaded');\n        setIsUploaded(true);\n      } else {\n        alert(\"File couldn't be uploaded\");\n      }\n    } else {\n      alert('Click Upload');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CreateMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [!isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: uplaodFile,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bothUpload\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOverCsv,\n              onDrop: handleDropCsv,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload sample CSV file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), !csvFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setCsvFile(e.target.files[0]);\n                  setCsvFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 50\n              }, this), csvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"File Name: \", csvFileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOverJson,\n              onDrop: handleDropJson,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload sample JSON file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this), !jsonFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setJsonFile(e.target.files[0]);\n                  setJsonFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 51\n              }, this), jsonFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"File Name: \", jsonFileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Upload\",\n            className: \"btnU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnU\",\n          onClick: handleNew,\n          children: \"Upload New Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mappingContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"csvContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CSV Headers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), csvHeaders.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dragDiv\",\n                onDragOver: handleDragOverMap,\n                onDrop: e => {\n                  handleDropMap(e, header);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mapKey borderCommon\",\n                  children: header\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  children: \"=>\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mapValue borderCommon\",\n                  children: mappings.get(header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsonContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Json Headers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), jsonHeaders.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsonItem1\",\n              draggable: true,\n              onDragStart: e => {\n                handleOnDragStart(e, header);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jsonItem borderCommon\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createMapping,\n          className: \"mapForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              setMapName(e.target.value);\n            },\n            placeholder: \"Map Name\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Mapping\",\n            className: \"btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMap, \"KeoNv1QcFGsAwncEIZw9GAhvnyk=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateMap;\nexport default CreateMap;\nvar _c;\n$RefreshReg$(_c, \"CreateMap\");","map":{"version":3,"names":["useState","useNavigate","React","Navbar","jwtDecode","jsxDEV","_jsxDEV","CreateMap","_s","userToken","localStorage","getItem","userDecode","navigate","csvFile","setCsvFile","csvFileName","setCsvFileName","jsonFile","setJsonFile","jsonFileName","setJsonFileName","csvHeaders","setCsvHeaders","jsonHeaders","setJsonHeaders","isUploaded","setIsUploaded","mappings","setMappings","Map","mapName","setMapName","handleDrageOverCsv","event","preventDefault","handleDropCsv","dataTransfer","files","name","console","log","handleDrageOverJson","handleDropJson","handleNew","handleDragOverMap","e","handleDropMap","header","droppedText","getData","set","handleOnDragStart","textData","setData","createMapping","alert","mapping","key","value","email","mappingName","toLowerCase","response","fetch","method","headers","body","JSON","stringify","userId","mappingData","csvHeader","jsonHeader","mappingType","data","json","status","uplaodFile","endsWith","window","location","reload","csvFormData","FormData","jsonFormData","append","csvResponse","jsonResponse","csvData","jsonData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onDragOver","onDrop","type","id","onChange","target","onClick","map","style","marginLeft","get","draggable","onDragStart","placeholder","_c","$RefreshReg$"],"sources":["D:/User/D_Documents/WebProjects/CSVConvertor/frontend/src/components/CreateMap.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nconst CreateMap = () => {\r\n\r\n    const userToken = localStorage.getItem('token')\r\n\r\n    const userDecode = jwtDecode(userToken)\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // CSV fields\r\n    const [csvFile, setCsvFile] = useState('')\r\n    const [csvFileName, setCsvFileName] = useState('')\r\n\r\n    // JSON Fields\r\n    const [jsonFile, setJsonFile] = useState('')\r\n    const [jsonFileName, setJsonFileName] = useState('')\r\n\r\n    const [csvHeaders, setCsvHeaders] = useState([]);\r\n    const [jsonHeaders, setJsonHeaders] = useState([]);\r\n\r\n    const [isUploaded, setIsUploaded] = useState(false);\r\n\r\n    const [mappings, setMappings] = useState(new Map());\r\n    const [mapName, setMapName] = useState('');\r\n\r\n    // CSV drag and drop\r\n    const handleDrageOverCsv = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDropCsv = (event) => {\r\n        event.preventDefault();\r\n        setCsvFile(event.dataTransfer.files[0])\r\n        setCsvFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n    }\r\n\r\n    // JSON drag and drop\r\n    const handleDrageOverJson = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDropJson = (event) => {\r\n        event.preventDefault();\r\n        setJsonFile(event.dataTransfer.files[0])\r\n        setJsonFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n    }\r\n\r\n    const handleNew = (event) => {\r\n        event.preventDefault();\r\n        setIsUploaded(false);\r\n        setCsvHeaders([]);\r\n        setJsonHeaders([]);\r\n        setCsvFile('');\r\n        setJsonFile('');\r\n        setCsvFileName('');\r\n        setJsonFileName('');\r\n        setMappings(new Map())\r\n    }\r\n\r\n    const handleDragOverMap = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleDropMap = (e, header) => {\r\n        e.preventDefault()\r\n        const droppedText = e.dataTransfer.getData(\"text\");\r\n\r\n        mappings.set(header, droppedText);\r\n        setMappings(new Map(mappings))\r\n\r\n        console.log(droppedText);\r\n        console.log(header);\r\n        console.log(mappings);\r\n\r\n    }\r\n\r\n    const handleOnDragStart = (e, textData) => {\r\n        e.dataTransfer.setData(\"text\", textData)\r\n    }\r\n\r\n    async function createMapping(e) {\r\n        e.preventDefault()\r\n        console.log(mappings)\r\n\r\n        if (!mapName) {\r\n            alert('Enter Map name')\r\n            return\r\n        }\r\n\r\n        const mapping = {}\r\n        for (let [key, value] of mappings) {\r\n            mapping[key] = value;\r\n        }\r\n\r\n        console.log(mapping)\r\n        console.log(userDecode.email)\r\n        console.log(localStorage.getItem('userid'))\r\n\r\n        const mappingName = mapName.toLowerCase()\r\n\r\n\r\n        const response = await fetch('http://localhost:1337/api/createmapping', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: localStorage.getItem('userid'),\r\n                mapName: mappingName,\r\n                mappingData: mapping,\r\n                csvHeader: csvHeaders,\r\n                jsonHeader: jsonHeaders,\r\n                mappingType: 'json'\r\n            }),\r\n        })\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'ok') {\r\n            console.log(response.status)\r\n            alert('Mapping Created')\r\n            navigate('/homepage')\r\n        }\r\n        if (data.status === 'error') {\r\n            alert('Map name already exists \\nEnter a new map name')\r\n        }\r\n        // .then(response => {\r\n        //     console.log(response.status)\r\n        //         alert('Mapping Created')\r\n        //         navigate('/')\r\n        // })\r\n        // .catch(error => {\r\n        //     console.log(error)\r\n        //     alert('Enter a new map name')\r\n        // });\r\n    }\r\n\r\n    async function uplaodFile(event) {\r\n        event.preventDefault()\r\n\r\n        if (!csvFileName.endsWith(\".csv\")) {\r\n            alert(\"Please Upload a valid CSV file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        if (!jsonFileName.endsWith(\".json\")) {\r\n            alert(\"Please Upload a vald JSON file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        const csvFormData = new FormData();\r\n        const jsonFormData = new FormData();\r\n        if (csvFile && jsonFile) {\r\n            csvFormData.append('name', 'csv_file');\r\n            csvFormData.append('file', csvFile);\r\n\r\n            jsonFormData.append('name', 'json_file');\r\n            jsonFormData.append('file', jsonFile);\r\n\r\n\r\n            console.log(...csvFormData)\r\n            console.log(...jsonFormData)\r\n\r\n            // const formData = new FormData();\r\n            // formData.append('csv', csvFile);\r\n            // formData.append('json', jsonFile);\r\n\r\n            // try{\r\n            // const response = await fetch('http://localhost:1337/api/bothupload', {\r\n            //     method: 'POST',\r\n            //     body: formData,\r\n            // });\r\n\r\n            // const data = await response.json();\r\n\r\n            // console.log(data)\r\n\r\n\r\n            //     setCsvHeaders(data.csvHeaders);\r\n            //     setJsonHeaders(data.jsonHeaders);\r\n\r\n            // } catch(err) {\r\n            //     console.log(err)\r\n            // }\r\n            const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\r\n                method: 'POST',\r\n                body: csvFormData\r\n            })\r\n\r\n            const jsonResponse = await fetch('http://localhost:1337/api/uploadjson', {\r\n                method: 'POST',\r\n                body: jsonFormData\r\n            })\r\n\r\n            const csvData = await csvResponse.json()\r\n            const jsonData = await jsonResponse.json()\r\n\r\n            console.log(jsonData.jsonHeaders)\r\n            console.log(jsonData.jsonHeaders)\r\n\r\n            setCsvHeaders(csvData.csvHeaders);\r\n            setJsonHeaders(jsonData.jsonHeaders);\r\n\r\n\r\n\r\n            if (csvData.status === 'ok' && jsonData.status === 'ok') {\r\n                alert('File Uploaded')\r\n                setIsUploaded(true)\r\n            } else {\r\n                alert(\"File couldn't be uploaded\")\r\n            }\r\n        }\r\n\r\n        else {\r\n            alert('Click Upload')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>CreateMap</h1>\r\n            <div className=\"upload\">\r\n                {!isUploaded &&\r\n                    <div>\r\n                        <form onSubmit={uplaodFile}>\r\n                            <div className=\"bothUpload\">\r\n                                <div\r\n                                    className=\"dragUpload\"\r\n                                    onDragOver={handleDrageOverCsv}\r\n                                    onDrop={handleDropCsv}\r\n                                >\r\n                                    <p>Drag to upload sample CSV file</p>\r\n                                    {!csvFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setCsvFile(e.target.files[0]); setCsvFileName(e.target.files[0].name) }} />}\r\n                                    {csvFile && <p>File Name: {csvFileName}</p>}\r\n                                    <br />\r\n                                </div>\r\n                                <div\r\n                                    className=\"dragUpload\"\r\n                                    onDragOver={handleDrageOverJson}\r\n                                    onDrop={handleDropJson}\r\n                                >\r\n                                    <p>Drag to upload sample JSON file</p>\r\n                                    {!jsonFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setJsonFile(e.target.files[0]); setJsonFileName(e.target.files[0].name) }} />}\r\n                                    {jsonFile && <p>File Name: {jsonFileName}</p>}\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Upload\" className=\"btnU\" />\r\n                        </form>\r\n                    </div>\r\n                }\r\n                {isUploaded && <div>\r\n                    <button className=\"btnU\" onClick={handleNew}>Upload New Files</button>\r\n\r\n                    <div className=\"mappingContent\">\r\n                        {<div className=\"csvContent\">\r\n                            <h1>CSV Headers</h1>\r\n                            {\r\n                                csvHeaders.map((header) => (\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"dragDiv\"\r\n                                            onDragOver={handleDragOverMap}\r\n                                            onDrop={(e) => { handleDropMap(e, header) }}\r\n                                        >\r\n                                            <div className=\"mapKey borderCommon\">{header}</div>\r\n                                            <div style={{ marginLeft: \"20px\" }}>=&gt;</div>\r\n                                            <div className=\"mapValue borderCommon\">{mappings.get(header)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>}\r\n\r\n                        {<div className=\"jsonContent\">\r\n                            <h1>Json Headers</h1>\r\n                            {\r\n                                jsonHeaders.map((header) => (\r\n                                    <div\r\n                                        className=\"jsonItem1\"\r\n                                        draggable\r\n                                        onDragStart={(e) => { handleOnDragStart(e, header) }}\r\n                                    >\r\n                                        <div className=\"jsonItem borderCommon\">{header}</div>\r\n                                        <br />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>}\r\n                        {/* <table>\r\n                            <tr>\r\n                                <th>CSV Content</th>\r\n                                <th>Mapped To</th>\r\n                                <th>JSON Content</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                {\r\n                                csvHeaders.map((header) => (\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"dragDiv\"\r\n                                            onDragOver={handleDragOverMap}\r\n                                            onDrop={(e) => { handleDropMap(e, header) }}\r\n                                        >\r\n                                            <div className=\"mapKey borderCommon\">{header}</div>\r\n                                            <div style={{ marginLeft: \"20px\" }}>=&gt;</div>\r\n                                            <div className=\"mapValue borderCommon\">{mappings.get(header)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                                </td>\r\n                                <td>\r\n                                    \r\n                                </td>\r\n                                <td>\r\n                                {\r\n                                jsonHeaders.map((header) => (\r\n                                    <div\r\n                                        className=\"jsonItem1\"\r\n                                        draggable\r\n                                        onDragStart={(e) => { handleOnDragStart(e, header) }}\r\n                                    >\r\n                                        <div className=\"jsonItem borderCommon\">{header}</div>\r\n                                        <br />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                                </td>\r\n                            </tr>\r\n                        </table> */}\r\n                    </div>\r\n                    <form onSubmit={createMapping} className=\"mapForm\">\r\n                        <input type=\"text\" onChange={(e) => { setMapName(e.target.value) }} placeholder=\"Map Name\" className=\"input\" />\r\n                        <input type=\"submit\" value=\"Create Mapping\" className=\"btn\" />\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}